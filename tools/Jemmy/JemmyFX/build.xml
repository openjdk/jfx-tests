<?xml version="1.0" encoding="UTF-8"?>
<project name="jemmyfx" default="compile">
    <basename file="${basedir}" property="."/>
    <property name="rootdir" location="${basedir}/../../.."/>
    <property name="project.name" value="GlassImage"/>
    <import file="${rootdir}/tools/make/build-template.xml"/>
    <property name="dependencies.classpath" value="${glass-robot-src}/build/classes${path.separator}${glass-image-src}/build/classes"/>
    <property name="gen.src.dir" location="${build.dir}/gen"/>
    <property name="src.samples.dir" location="${basedir}/samples"/>
    <property name="build.samples.dir" location="${build.dir}/samples"/>
    <property name="test.dependencies.classpath" value="${jemmyfx-browser-src}/build/classes${path.separator}${build.samples.dir}"/>
    <property name="sample.list" location="${build.dir}/sample.list"/>
    <property environment="env"/>
    <target name="build-dependencies">
        <antcall target="build-other-project">
            <param name="project" value="${glass-image-src}"/>
        </antcall>
        <antcall target="build-other-project">
            <param name="project" value="${glass-robot-src}"/>
        </antcall>
    </target>
    <target name="compile" depends="init,build-dependencies">
        <mkdir dir="${build.classes.dir}"/>
        <mkdir dir="${gen.src.dir}"/>
        <javac destdir="${build.classes.dir}" debug="on" includeantruntime="false">
            <classpath>
                <path refid="jemmyfx.classpath"/>
                <pathelement path="${dependencies.classpath}"/>
            </classpath>
            <src>
                <pathelement path="${src.dir}"/>
            </src>
            <compilerarg value="-processor"/>
            <compilerarg value="org.jemmy.support.Processor"/>
            <compilerarg value="-Aactions=docks,dump"/>
            <compilerarg value="-s"/>
            <compilerarg value="${gen.src.dir}"/>
        </javac>
        <javac srcdir="${gen.src.dir}" destdir="${build.classes.dir}" debug="on" includeantruntime="false">
            <classpath>
                <path refid="jemmyfx.classpath"/>
                <pathelement location="${build.classes.dir}"/>
                <pathelement path="${dependencies.classpath}"/>
            </classpath>
        </javac>
        <copy file="${gen.src.dir}/support.xml" todir="${build.classes.dir}"/>
    </target>
    <target name="build-test-dependencies" depends="compile">
        <mkdir dir="${build.samples.dir}"/>
        <javac destdir="${build.samples.dir}" debug="on" includeantruntime="false">
            <classpath>
                <path refid="jemmyfx.classpath"/>
                <pathelement path="${dependencies.classpath}"/>
                <pathelement location="${build.classes.dir}"/>
                <pathelement location="${jtreg.home}/lib/junit.jar"/>
            </classpath>
            <src>
                <pathelement path="${src.samples.dir}"/>
            </src>
        </javac>
        <antcall target="build-other-project">
            <param name="project" value="${jemmyfx-browser-src}"/>
        </antcall>
    </target>
    <target name="find-samples" unless="samples">
        <fileset id="sampleset" dir="${src.samples.dir}">
            <include name="**/*Sample.java" />
        </fileset>
        <pathconvert pathsep="${line.separator}" property="samplelist" refid="sampleset">
            <globmapper from="${src.samples.dir}/*" to="*"/>
        </pathconvert>
        <echo file="${sample.list}">${samplelist}</echo>
        <property name="samples" value="@${sample.list}"/>
    </target>
    <target name="samples" depends="build-test-dependencies,compile-test,find-samples">
        <property name="jemmyfx.classpath.prop" refid="jemmyfx.classpath"/>
        <exec executable="${env.SHELL}">
            <arg value="${jtreg.home}/bin/jtreg"/>
            <arg value="-cpa:${build.classes.dir}${path.separator}${dependencies.classpath}${path.separator}${test.dependencies.classpath}${path.separator}${jemmyfx.classpath.prop}${path.separator}${jtreg.home}/lib/junit.jar"/>
            <arg value="-w:${test.workdir}"/>
            <arg value="-r:${test.report}"/>
            <arg value="-conc:1"/>
            <arg value="-ovm"/>
            <arg value="-v:default"/>
            <arg value="-dir:samples"/>
            <arg value="${samples}"/>
        </exec>
    </target>
</project>
